{"ast":null,"code":"var _jsxFileName = \"/home/tom/Documentos/corelabbr/corelab-web-challenge/src/pages/New/index.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from \"yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function New() {\n  _s();\n\n  var _errors$name, _errors$brand, _errors$color, _errors$year, _errors$plate, _errors$description;\n\n  const schema = yup.object({\n    name: yup.string().max(50, 'Limite de 50 caracteres').required('É necessário que o campo de nome seja preenchido'),\n    brand: yup.string().max(50, 'Limite de 50 caracteres').required('É necessário que o campo de marca seja preenchido'),\n    color: yup.string().max(50, 'Limite de 50 caracteres').required('É necessário que o campo de cor seja preenchido'),\n    year: yup.number('Valor deve ser numérico').min(1000).max(2999).required('É necessário que o campo de ano seja preenchido'),\n    plate: yup.string().min(7, 'A placa deve possuir 7 caracteres').max(7, 'A placa deve possuir 7 caracteres').required('É necessário que o campo de placa seja preenchido'),\n    description: yup.string().max(500, 'Limite de 500 caracteres').required('É necessário que o campo de descrição seja preenchido'),\n    price: yup.number().required('É necessário que o campo de preço seja preenchido')\n  }).required();\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(schema)\n  });\n\n  const onSubmit = async data => {\n    console.log(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Nome\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"name\", {\n            required: true,\n            maxLength: 50\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: (_errors$name = errors.name) === null || _errors$name === void 0 ? void 0 : _errors$name.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Marca\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"brand\", {\n            required: true,\n            maxLength: 50\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: (_errors$brand = errors.brand) === null || _errors$brand === void 0 ? void 0 : _errors$brand.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Cor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"color\", {\n            required: true,\n            maxLength: 50\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: (_errors$color = errors.color) === null || _errors$color === void 0 ? void 0 : _errors$color.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Ano\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          ...register(\"year\", {\n            required: true\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: (_errors$year = errors.year) === null || _errors$year === void 0 ? void 0 : _errors$year.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Placa\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"plate\", {\n            required: true,\n            minLength: 7,\n            maxLength: 7\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: (_errors$plate = errors.plate) === null || _errors$plate === void 0 ? void 0 : _errors$plate.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Descri\\xE7\\xE3o\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"description\", {\n            required: true\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: (_errors$description = errors.description) === null || _errors$description === void 0 ? void 0 : _errors$description.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Pre\\xE7o\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          ...register(\"price\", {\n            required: true\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: errors.price && 'É necessário que o campo de preço seja preenchido corretamente'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_s(New, \"cSudtlZF25wA1QXS6hk7TRnoNuU=\", false, function () {\n  return [useForm];\n});\n\n_c = New;\n\nvar _c;\n\n$RefreshReg$(_c, \"New\");","map":{"version":3,"names":["React","useForm","yupResolver","yup","New","schema","object","name","string","max","required","brand","color","year","number","min","plate","description","price","register","handleSubmit","formState","errors","resolver","onSubmit","data","console","log","maxLength","message","minLength"],"sources":["/home/tom/Documentos/corelabbr/corelab-web-challenge/src/pages/New/index.js"],"sourcesContent":["import React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from \"yup\";\n\nexport default function New() {\n\n  const schema = yup.object({\n    name: yup.string().max(50, 'Limite de 50 caracteres').required('É necessário que o campo de nome seja preenchido'),\n    brand: yup.string().max(50, 'Limite de 50 caracteres').required('É necessário que o campo de marca seja preenchido'),\n    color: yup.string().max(50, 'Limite de 50 caracteres').required('É necessário que o campo de cor seja preenchido'),\n    year: yup.number('Valor deve ser numérico').min(1000).max(2999).required('É necessário que o campo de ano seja preenchido'),\n    plate: yup.string().min(7, 'A placa deve possuir 7 caracteres').max(7, 'A placa deve possuir 7 caracteres').required('É necessário que o campo de placa seja preenchido'),\n    description: yup.string().max(500, 'Limite de 500 caracteres').required('É necessário que o campo de descrição seja preenchido'),\n    price: yup.number().required('É necessário que o campo de preço seja preenchido'),\n  }).required();\n\n  const { register, handleSubmit, formState: { errors } } = useForm({\n    resolver: yupResolver(schema)\n  });\n  const onSubmit = async (data) => { console.log(data)};\n\n  return (\n    <main>\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <div>\n            <p>Nome</p>\n            <input {...register(\"name\", { required: true, maxLength: 50 })} />\n            <p>{errors.name?.message}</p>\n          </div>\n          <div>\n            <p>Marca</p>\n            <input {...register(\"brand\", { required: true, maxLength: 50 })} />\n            <p>{errors.brand?.message}</p>\n          </div>\n          <div>\n            <p>Cor</p>\n            <input {...register(\"color\", { required: true, maxLength: 50 })} />\n            <p>{errors.color?.message}</p>\n          </div>\n          <div>\n            <p>Ano</p>\n            <input type=\"number\" {...register(\"year\", { required: true })} />\n            <p>{errors.year?.message}</p>\n          </div>\n          <div>\n            <p>Placa</p>\n            <input {...register(\"plate\", { required: true, minLength:7, maxLength: 7 })} />\n            <p>{errors.plate?.message}</p>\n          </div>\n          <div>\n            <p>Descrição</p>\n            <input {...register(\"description\", { required: true })} />\n            <p>{errors.description?.message}</p>\n          </div>\n          <div>\n            <p>Preço</p>\n            <input type=\"number\" {...register(\"price\", { required: true })} />\n            <p>{errors.price && 'É necessário que o campo de preço seja preenchido corretamente'}</p>\n          </div>\n        <input type=\"submit\" />\n      </form>\n    </main>\n  )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}