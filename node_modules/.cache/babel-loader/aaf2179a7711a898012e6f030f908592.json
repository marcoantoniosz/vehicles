{"ast":null,"code":"var _jsxFileName = \"/home/tom/Documentos/corelabbr/corelab-web-challenge/src/pages/New/index.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from \"yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function New() {\n  _s();\n\n  const schema = yup.object({\n    name: yup.string().required(),\n    brand: yup.string().required('É necessário que o campo de marca seja preenchido'),\n    color: yup.string().required('É necessário que o campo de cor seja preenchido'),\n    year: yup.number().required('É necessário que o campo de ano seja preenchido'),\n    plate: yup.string().required('É necessário que o campo de placa seja preenchido'),\n    description: yup.string().required('É necessário que o campo de descrição seja preenchido'),\n    price: yup.number().required('É necessário que o campo de preço seja preenchido')\n  }).required();\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(schema)\n  });\n\n  const onSubmit = async data => {\n    console.log(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", { ...register(\"name\", {\n          required: true,\n          maxLength: 50\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"brand\", {\n          required: true,\n          maxLength: 50\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"color\", {\n          required: true,\n          maxLength: 50\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        ...register(\"year\", {\n          required: true\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"plate\", {\n          required: true\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"description\", {\n          required: true\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        ...register(\"price\", {\n          required: true\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_s(New, \"cSudtlZF25wA1QXS6hk7TRnoNuU=\", false, function () {\n  return [useForm];\n});\n\n_c = New;\n\nvar _c;\n\n$RefreshReg$(_c, \"New\");","map":{"version":3,"names":["React","useForm","yupResolver","yup","New","schema","object","name","string","required","brand","color","year","number","plate","description","price","register","handleSubmit","formState","errors","resolver","onSubmit","data","console","log","maxLength"],"sources":["/home/tom/Documentos/corelabbr/corelab-web-challenge/src/pages/New/index.js"],"sourcesContent":["import React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from \"yup\";\n\nexport default function New() {\n\n  const schema = yup.object({\n    name: yup.string().required(),\n    brand: yup.string().required('É necessário que o campo de marca seja preenchido'),\n    color: yup.string().required('É necessário que o campo de cor seja preenchido'),\n    year: yup.number().required('É necessário que o campo de ano seja preenchido'),\n    plate: yup.string().required('É necessário que o campo de placa seja preenchido'),\n    description: yup.string().required('É necessário que o campo de descrição seja preenchido'),\n    price: yup.number().required('É necessário que o campo de preço seja preenchido'),\n  }).required();\n\n  const { register, handleSubmit, formState: { errors } } = useForm({\n    resolver: yupResolver(schema)\n  });\n  const onSubmit = async (data) => { console.log(data)};\n\n  return (\n    <main>\n        <form onSubmit={handleSubmit(onSubmit)}>\n        <input {...register(\"name\", { required: true, maxLength:50 })} />\n        <input {...register(\"brand\", { required: true, maxLength:50 })} />\n        <input {...register(\"color\", { required: true, maxLength:50 })} />\n        <input type=\"number\" {...register(\"year\", { required: true })} />\n        <input {...register(\"plate\", { required: true })} />\n        <input {...register(\"description\", { required: true })} />\n        <input type=\"number\" {...register(\"price\", { required: true })} />\n        <input type=\"submit\" />\n      </form>\n    </main>\n  )\n}"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;;AAEA,eAAe,SAASC,GAAT,GAAe;EAAA;;EAE5B,MAAMC,MAAM,GAAGF,GAAG,CAACG,MAAJ,CAAW;IACxBC,IAAI,EAAEJ,GAAG,CAACK,MAAJ,GAAaC,QAAb,EADkB;IAExBC,KAAK,EAAEP,GAAG,CAACK,MAAJ,GAAaC,QAAb,CAAsB,mDAAtB,CAFiB;IAGxBE,KAAK,EAAER,GAAG,CAACK,MAAJ,GAAaC,QAAb,CAAsB,iDAAtB,CAHiB;IAIxBG,IAAI,EAAET,GAAG,CAACU,MAAJ,GAAaJ,QAAb,CAAsB,iDAAtB,CAJkB;IAKxBK,KAAK,EAAEX,GAAG,CAACK,MAAJ,GAAaC,QAAb,CAAsB,mDAAtB,CALiB;IAMxBM,WAAW,EAAEZ,GAAG,CAACK,MAAJ,GAAaC,QAAb,CAAsB,uDAAtB,CANW;IAOxBO,KAAK,EAAEb,GAAG,CAACU,MAAJ,GAAaJ,QAAb,CAAsB,mDAAtB;EAPiB,CAAX,EAQZA,QARY,EAAf;EAUA,MAAM;IAAEQ,QAAF;IAAYC,YAAZ;IAA0BC,SAAS,EAAE;MAAEC;IAAF;EAArC,IAAoDnB,OAAO,CAAC;IAChEoB,QAAQ,EAAEnB,WAAW,CAACG,MAAD;EAD2C,CAAD,CAAjE;;EAGA,MAAMiB,QAAQ,GAAG,MAAOC,IAAP,IAAgB;IAAEC,OAAO,CAACC,GAAR,CAAYF,IAAZ;EAAkB,CAArD;;EAEA,oBACE;IAAA,uBACI;MAAM,QAAQ,EAAEL,YAAY,CAACI,QAAD,CAA5B;MAAA,wBACA,sBAAWL,QAAQ,CAAC,MAAD,EAAS;UAAER,QAAQ,EAAE,IAAZ;UAAkBiB,SAAS,EAAC;QAA5B,CAAT;MAAnB;QAAA;QAAA;QAAA;MAAA,QADA,eAEA,sBAAWT,QAAQ,CAAC,OAAD,EAAU;UAAER,QAAQ,EAAE,IAAZ;UAAkBiB,SAAS,EAAC;QAA5B,CAAV;MAAnB;QAAA;QAAA;QAAA;MAAA,QAFA,eAGA,sBAAWT,QAAQ,CAAC,OAAD,EAAU;UAAER,QAAQ,EAAE,IAAZ;UAAkBiB,SAAS,EAAC;QAA5B,CAAV;MAAnB;QAAA;QAAA;QAAA;MAAA,QAHA,eAIA;QAAO,IAAI,EAAC,QAAZ;QAAA,GAAyBT,QAAQ,CAAC,MAAD,EAAS;UAAER,QAAQ,EAAE;QAAZ,CAAT;MAAjC;QAAA;QAAA;QAAA;MAAA,QAJA,eAKA,sBAAWQ,QAAQ,CAAC,OAAD,EAAU;UAAER,QAAQ,EAAE;QAAZ,CAAV;MAAnB;QAAA;QAAA;QAAA;MAAA,QALA,eAMA,sBAAWQ,QAAQ,CAAC,aAAD,EAAgB;UAAER,QAAQ,EAAE;QAAZ,CAAhB;MAAnB;QAAA;QAAA;QAAA;MAAA,QANA,eAOA;QAAO,IAAI,EAAC,QAAZ;QAAA,GAAyBQ,QAAQ,CAAC,OAAD,EAAU;UAAER,QAAQ,EAAE;QAAZ,CAAV;MAAjC;QAAA;QAAA;QAAA;MAAA,QAPA,eAQA;QAAO,IAAI,EAAC;MAAZ;QAAA;QAAA;QAAA;MAAA,QARA;IAAA;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADF;AAcD;;GA/BuBL,G;UAYoCH,O;;;KAZpCG,G"},"metadata":{},"sourceType":"module"}