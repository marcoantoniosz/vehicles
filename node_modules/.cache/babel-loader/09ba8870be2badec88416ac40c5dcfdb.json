{"ast":null,"code":"export const getAll = async () => {\n  const response = await fetch('https://vehicles-challenge-backend.herokuapp.com/ads');\n  const data = await response.json();\n  return data;\n};\nexport const getByQuery = async query => {\n  const response = await fetch(`https://vehicles-challenge-backend.herokuapp.com/ads/search?q=${query}`);\n  const data = await response.json();\n  return data;\n};\nexport const getByFilters = async (b, c, y, min, max) => {\n  const response = await fetch(`https://vehicles-challenge-backend.herokuapp.com/ads/filters?b=${b}&c=${c}&y=${y}&min=${min}&max=${max}`);\n  const data = await response.json();\n  return data;\n};\nexport const createNewVehicle = async vehicle => {\n  const response = await fetch('https://vehicles-challenge-backend.herokuapp.com/ads', {\n    method: 'POST',\n    body: JSON.stringify(vehicle)\n  });\n  const data = await response.json();\n  return data;\n};","map":{"version":3,"names":["getAll","response","fetch","data","json","getByQuery","query","getByFilters","b","c","y","min","max","createNewVehicle","vehicle","method","body","JSON","stringify"],"sources":["/home/tom/Documentos/corelabbr/corelab-web-challenge/src/services/API.js"],"sourcesContent":["export const getAll = async () => {\n  const response = await fetch('https://vehicles-challenge-backend.herokuapp.com/ads');\n  const data = await response.json();\n  return data;\n};\n\nexport const getByQuery = async (query) => {\n  const response = await fetch(`https://vehicles-challenge-backend.herokuapp.com/ads/search?q=${query}`);\n  const data = await response.json();\n  return data;\n}\n\nexport const getByFilters = async (b, c, y, min, max) => {\n  const response = await fetch(`https://vehicles-challenge-backend.herokuapp.com/ads/filters?b=${b}&c=${c}&y=${y}&min=${min}&max=${max}`);\n  const data = await response.json();\n  return data;\n}\n\nexport const createNewVehicle = async (vehicle) => {\n  const response = await fetch('https://vehicles-challenge-backend.herokuapp.com/ads', {\n    method: 'POST',\n    body: JSON.stringify(vehicle),\n  });\n  const data = await response.json();\n  return data;\n}"],"mappings":"AAAA,OAAO,MAAMA,MAAM,GAAG,YAAY;EAChC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,sDAAD,CAA5B;EACA,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;EACA,OAAOD,IAAP;AACD,CAJM;AAMP,OAAO,MAAME,UAAU,GAAG,MAAOC,KAAP,IAAiB;EACzC,MAAML,QAAQ,GAAG,MAAMC,KAAK,CAAE,iEAAgEI,KAAM,EAAxE,CAA5B;EACA,MAAMH,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;EACA,OAAOD,IAAP;AACD,CAJM;AAMP,OAAO,MAAMI,YAAY,GAAG,OAAOC,CAAP,EAAUC,CAAV,EAAaC,CAAb,EAAgBC,GAAhB,EAAqBC,GAArB,KAA6B;EACvD,MAAMX,QAAQ,GAAG,MAAMC,KAAK,CAAE,kEAAiEM,CAAE,MAAKC,CAAE,MAAKC,CAAE,QAAOC,GAAI,QAAOC,GAAI,EAAzG,CAA5B;EACA,MAAMT,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;EACA,OAAOD,IAAP;AACD,CAJM;AAMP,OAAO,MAAMU,gBAAgB,GAAG,MAAOC,OAAP,IAAmB;EACjD,MAAMb,QAAQ,GAAG,MAAMC,KAAK,CAAC,sDAAD,EAAyD;IACnFa,MAAM,EAAE,MAD2E;IAEnFC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,OAAf;EAF6E,CAAzD,CAA5B;EAIA,MAAMX,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;EACA,OAAOD,IAAP;AACD,CAPM"},"metadata":{},"sourceType":"module"}