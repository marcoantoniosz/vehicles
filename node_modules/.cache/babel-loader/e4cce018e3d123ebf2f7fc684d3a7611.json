{"ast":null,"code":"var _jsxFileName = \"/home/tom/Documentos/corelabbr/corelab-web-challenge/src/pages/Filters/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { getAll } from '../../services/API';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from \"yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Filters() {\n  _s();\n\n  var _errors$brand;\n\n  const schema = yup.object({\n    brand: yup.string().required('É necessário que o campo de marca seja preenchido'),\n    color: yup.string().required('É necessário que o campo de cor seja preenchido'),\n    year: yup.string().required('É necessário que o campo de ano seja preenchido'),\n    min: yup.number().positive().integer().required('É necessário que o campo de preço mínimo seja preenchido'),\n    max: yup.number().positive().integer().required('É necessário que o campo de preço máximo seja preenchido')\n  }).required();\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(schema)\n  });\n\n  const onSubmit = data => console.log(data);\n\n  const [brands, setBrands] = useState([]);\n  const [colors, setColors] = useState([]);\n  const [years, setYeats] = useState([]);\n\n  const getFilters = async () => {\n    const response = await getAll();\n    setBrands(response.map(item => item.brand));\n    setColors(response.map(item => item.color));\n    setYeats(response.map(item => item.year));\n  };\n\n  useEffect(() => {\n    getFilters();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"select\", { ...register(\"brand\", {\n          required: true\n        }),\n        children: brands.map(brand => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: brand,\n          children: brand\n        }, brand, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 34\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: (_errors$brand = errors.brand) === null || _errors$brand === void 0 ? void 0 : _errors$brand.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", { ...register(\"year\", {\n          required: true\n        }),\n        children: years.map(year => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: year,\n          children: year\n        }, year, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 32\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", { ...register(\"color\", {\n          required: true\n        }),\n        children: colors.map(color => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: color,\n          children: color\n        }, color, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 34\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        ...register(\"min\", {\n          min: 1,\n          required: true\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        ...register(\"max\", {\n          min: 1,\n          required: true\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Filters, \"u/YW9JgQ5tpus52/X8EeQibj7jg=\", false, function () {\n  return [useForm];\n});\n\n_c = Filters;\n\nvar _c;\n\n$RefreshReg$(_c, \"Filters\");","map":{"version":3,"names":["React","useState","useEffect","getAll","useForm","yupResolver","yup","Filters","schema","object","brand","string","required","color","year","min","number","positive","integer","max","register","handleSubmit","formState","errors","resolver","onSubmit","data","console","log","brands","setBrands","colors","setColors","years","setYeats","getFilters","response","map","item","message"],"sources":["/home/tom/Documentos/corelabbr/corelab-web-challenge/src/pages/Filters/index.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { getAll } from '../../services/API';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from \"yup\";\n\nexport default function Filters() {\n\n  const schema = yup.object({\n    brand: yup.string().required('É necessário que o campo de marca seja preenchido'),\n    color: yup.string().required('É necessário que o campo de cor seja preenchido'),\n    year: yup.string().required('É necessário que o campo de ano seja preenchido'),\n    min: yup.number().positive().integer().required('É necessário que o campo de preço mínimo seja preenchido'),\n    max: yup.number().positive().integer().required('É necessário que o campo de preço máximo seja preenchido'),\n  }).required();\n\n  const { register, handleSubmit, formState: { errors } } = useForm({\n    resolver: yupResolver(schema)\n  });\n  const onSubmit = data => console.log(data);\n\n  const [brands, setBrands] = useState([]);\n  const [colors, setColors] = useState([]);\n  const [years, setYeats] = useState([]);\n\n  const getFilters = async () => {\n    const response = await getAll();\n    setBrands(response.map((item) => item.brand));\n    setColors(response.map((item) => item.color));\n    setYeats(response.map((item) => item.year));\n  }\n\n  useEffect(() => {\n    getFilters();\n  }, []);\n\n  return (\n    <main>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <select {...register(\"brand\", { required: true })}>\n          {brands.map((brand) => <option key={brand} value={brand}>{brand}</option>)}\n        </select>\n        <p>{errors.brand?.message}</p>\n        <select {...register(\"year\", { required: true })}>\n          {years.map((year) => <option key={year} value={year}>{year}</option>)}\n        </select>\n        <select {...register(\"color\", { required: true })}>\n          {colors.map((color) => <option key={color} value={color}>{color}</option>)}\n        </select>\n        <input type=\"number\" {...register(\"min\", { min: 1, required:true })} />\n        <input type=\"number\" {...register(\"max\", { min: 1, required:true })} />\n        <input type=\"submit\" />\n    </form>\n    </main>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}